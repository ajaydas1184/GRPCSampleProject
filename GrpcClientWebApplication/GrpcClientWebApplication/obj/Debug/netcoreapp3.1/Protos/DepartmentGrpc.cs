// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Department.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcService {
  /// <summary>
  /// The Department service definition.
  /// </summary>
  public static partial class RemoteDepartment
  {
    static readonly string __ServiceName = "departmentPackage.RemoteDepartment";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::GrpcService.DepartmentRequest> __Marshaller_departmentPackage_DepartmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.DepartmentRequest.Parser));
    static readonly grpc::Marshaller<global::GrpcService.DepartmentModel> __Marshaller_departmentPackage_DepartmentModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.DepartmentModel.Parser));
    static readonly grpc::Marshaller<global::GrpcService.DepartmentsResponse> __Marshaller_departmentPackage_DepartmentsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.DepartmentsResponse.Parser));
    static readonly grpc::Marshaller<global::GrpcService.DepartmentResponse> __Marshaller_departmentPackage_DepartmentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.DepartmentResponse.Parser));

    static readonly grpc::Method<global::GrpcService.DepartmentRequest, global::GrpcService.DepartmentModel> __Method_GetDepartmentInfo = new grpc::Method<global::GrpcService.DepartmentRequest, global::GrpcService.DepartmentModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDepartmentInfo",
        __Marshaller_departmentPackage_DepartmentRequest,
        __Marshaller_departmentPackage_DepartmentModel);

    static readonly grpc::Method<global::GrpcService.DepartmentRequest, global::GrpcService.DepartmentsResponse> __Method_GetDepartmentList = new grpc::Method<global::GrpcService.DepartmentRequest, global::GrpcService.DepartmentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDepartmentList",
        __Marshaller_departmentPackage_DepartmentRequest,
        __Marshaller_departmentPackage_DepartmentsResponse);

    static readonly grpc::Method<global::GrpcService.DepartmentModel, global::GrpcService.DepartmentResponse> __Method_AddEditRecord = new grpc::Method<global::GrpcService.DepartmentModel, global::GrpcService.DepartmentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddEditRecord",
        __Marshaller_departmentPackage_DepartmentModel,
        __Marshaller_departmentPackage_DepartmentResponse);

    static readonly grpc::Method<global::GrpcService.DepartmentRequest, global::GrpcService.DepartmentResponse> __Method_DeleteRecord = new grpc::Method<global::GrpcService.DepartmentRequest, global::GrpcService.DepartmentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRecord",
        __Marshaller_departmentPackage_DepartmentRequest,
        __Marshaller_departmentPackage_DepartmentResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcService.DepartmentReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for RemoteDepartment</summary>
    public partial class RemoteDepartmentClient : grpc::ClientBase<RemoteDepartmentClient>
    {
      /// <summary>Creates a new client for RemoteDepartment</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public RemoteDepartmentClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for RemoteDepartment that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public RemoteDepartmentClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected RemoteDepartmentClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected RemoteDepartmentClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcService.DepartmentModel GetDepartmentInfo(global::GrpcService.DepartmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDepartmentInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcService.DepartmentModel GetDepartmentInfo(global::GrpcService.DepartmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDepartmentInfo, null, options, request);
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcService.DepartmentModel> GetDepartmentInfoAsync(global::GrpcService.DepartmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDepartmentInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcService.DepartmentModel> GetDepartmentInfoAsync(global::GrpcService.DepartmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDepartmentInfo, null, options, request);
      }
      public virtual global::GrpcService.DepartmentsResponse GetDepartmentList(global::GrpcService.DepartmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDepartmentList(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.DepartmentsResponse GetDepartmentList(global::GrpcService.DepartmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDepartmentList, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.DepartmentsResponse> GetDepartmentListAsync(global::GrpcService.DepartmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDepartmentListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.DepartmentsResponse> GetDepartmentListAsync(global::GrpcService.DepartmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDepartmentList, null, options, request);
      }
      public virtual global::GrpcService.DepartmentResponse AddEditRecord(global::GrpcService.DepartmentModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddEditRecord(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.DepartmentResponse AddEditRecord(global::GrpcService.DepartmentModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddEditRecord, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.DepartmentResponse> AddEditRecordAsync(global::GrpcService.DepartmentModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddEditRecordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.DepartmentResponse> AddEditRecordAsync(global::GrpcService.DepartmentModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddEditRecord, null, options, request);
      }
      public virtual global::GrpcService.DepartmentResponse DeleteRecord(global::GrpcService.DepartmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRecord(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.DepartmentResponse DeleteRecord(global::GrpcService.DepartmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRecord, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.DepartmentResponse> DeleteRecordAsync(global::GrpcService.DepartmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRecordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.DepartmentResponse> DeleteRecordAsync(global::GrpcService.DepartmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRecord, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override RemoteDepartmentClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new RemoteDepartmentClient(configuration);
      }
    }

  }
}
#endregion
