// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Employee.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcService {
  /// <summary>
  /// The Department service definition.
  /// </summary>
  public static partial class RemoteEmployee
  {
    static readonly string __ServiceName = "employeePackage.RemoteEmployee";

    static readonly grpc::Marshaller<global::GrpcService.FilterRequest> __Marshaller_employeePackage_FilterRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.FilterRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.EmployeeModel> __Marshaller_employeePackage_EmployeeModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.EmployeeModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.EmployeesResponse> __Marshaller_employeePackage_EmployeesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.EmployeesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.EmployeeResponse> __Marshaller_employeePackage_EmployeeResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.EmployeeResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcService.FilterRequest, global::GrpcService.EmployeeModel> __Method_GetEmployeeInfo = new grpc::Method<global::GrpcService.FilterRequest, global::GrpcService.EmployeeModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEmployeeInfo",
        __Marshaller_employeePackage_FilterRequest,
        __Marshaller_employeePackage_EmployeeModel);

    static readonly grpc::Method<global::GrpcService.FilterRequest, global::GrpcService.EmployeesResponse> __Method_GetEmployeeList = new grpc::Method<global::GrpcService.FilterRequest, global::GrpcService.EmployeesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEmployeeList",
        __Marshaller_employeePackage_FilterRequest,
        __Marshaller_employeePackage_EmployeesResponse);

    static readonly grpc::Method<global::GrpcService.EmployeeModel, global::GrpcService.EmployeeResponse> __Method_AddEditRecord = new grpc::Method<global::GrpcService.EmployeeModel, global::GrpcService.EmployeeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddEditRecord",
        __Marshaller_employeePackage_EmployeeModel,
        __Marshaller_employeePackage_EmployeeResponse);

    static readonly grpc::Method<global::GrpcService.FilterRequest, global::GrpcService.EmployeeResponse> __Method_DeleteRecord = new grpc::Method<global::GrpcService.FilterRequest, global::GrpcService.EmployeeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRecord",
        __Marshaller_employeePackage_FilterRequest,
        __Marshaller_employeePackage_EmployeeResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcService.EmployeeReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of RemoteEmployee</summary>
    [grpc::BindServiceMethod(typeof(RemoteEmployee), "BindService")]
    public abstract partial class RemoteEmployeeBase
    {
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.EmployeeModel> GetEmployeeInfo(global::GrpcService.FilterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcService.EmployeesResponse> GetEmployeeList(global::GrpcService.FilterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcService.EmployeeResponse> AddEditRecord(global::GrpcService.EmployeeModel request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcService.EmployeeResponse> DeleteRecord(global::GrpcService.FilterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(RemoteEmployeeBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetEmployeeInfo, serviceImpl.GetEmployeeInfo)
          .AddMethod(__Method_GetEmployeeList, serviceImpl.GetEmployeeList)
          .AddMethod(__Method_AddEditRecord, serviceImpl.AddEditRecord)
          .AddMethod(__Method_DeleteRecord, serviceImpl.DeleteRecord).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, RemoteEmployeeBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetEmployeeInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.FilterRequest, global::GrpcService.EmployeeModel>(serviceImpl.GetEmployeeInfo));
      serviceBinder.AddMethod(__Method_GetEmployeeList, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.FilterRequest, global::GrpcService.EmployeesResponse>(serviceImpl.GetEmployeeList));
      serviceBinder.AddMethod(__Method_AddEditRecord, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.EmployeeModel, global::GrpcService.EmployeeResponse>(serviceImpl.AddEditRecord));
      serviceBinder.AddMethod(__Method_DeleteRecord, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.FilterRequest, global::GrpcService.EmployeeResponse>(serviceImpl.DeleteRecord));
    }

  }
}
#endregion
